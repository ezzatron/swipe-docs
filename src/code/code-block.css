:root {
  --cb-bg: theme("colors.gray.100");
  --cb-key: theme("colors.blue.950");
  --cb-key-bg: theme("colors.blue.200");
  --cb-key-focused: white;
  --cb-key-focused-bg: theme("colors.blue.400");
  --cb-line-number: theme("colors.gray.400");
  --cb-scrollbar: theme("colors.gray.300");
  --cb-section-expander-active: theme("colors.blue.500");
  --cb-section-expander-focused: theme("colors.gray.500");
  --cb-section-expander: theme("colors.gray.300");
  --cb-selection: rgb(from theme("colors.blue.400") r g b / 25%);
  --cb-whitespace: theme("colors.gray.400");
}
@media (prefers-color-scheme: dark) {
  :root {
    --cb-bg: theme("colors.gray.900");
    --cb-key: theme("colors.blue.100");
    --cb-key-bg: theme("colors.blue.900");
    --cb-key-focused: white;
    --cb-key-focused-bg: theme("colors.blue.700");
    --cb-line-number: theme("colors.gray.600");
    --cb-scrollbar: theme("colors.gray.700");
    --cb-section-expander-active: theme("colors.blue.500");
    --cb-section-expander-focused: theme("colors.gray.500");
    --cb-section-expander: theme("colors.gray.700");
    --cb-selection: rgb(from theme("colors.blue.500") r g b / 25%);
    --cb-whitespace: theme("colors.gray.600");
  }
}

.cb {
  position: relative;
  background-color: var(--cb-bg);
  padding: theme("padding.3") theme("padding.4") theme("padding.3") 0;
  overflow-x: auto;
  overflow-y: clip;
  tab-size: 2;
}

/* nothing but code lines should be selectable */
.cb,
.cb * {
  user-select: none;
}
.cb-l,
.cb-l * {
  user-select: text;
}

/* selection color */
.cb::selection,
.cb *::selection {
  background-color: var(--cb-selection);
}

/* line numbers and code */
:is(.cb-sc, .cb-sx) {
  display: flex;
  position: relative;
}
.cb-ln {
  display: none;
  position: sticky;
  left: 0;
  flex-shrink: 0;
  margin-right: calc(-1 * theme("padding.4"));
  background-color: var(--cb-bg);
  padding-right: theme("padding.6");
  padding-left: theme("padding.4");
  width: calc(theme("padding.4") + var(--cb-w) + theme("padding.6"));
  color: var(--cb-line-number);
  text-align: right;
}
.cb-ln-s .cb-ln {
  display: block;
}
.cb code {
  flex-grow: 1;
  padding: 0 theme("padding.4");
}

/* scrollbar */
@supports (scrollbar-color: auto) {
  .cb {
    scrollbar-color: var(--cb-scrollbar) transparent;
  }
}
@supports selector(::-webkit-scrollbar) {
  .cb::-webkit-scrollbar-thumb {
    border-radius: theme("borderRadius.full");
    background-color: var(--cb-scrollbar);
  }
  .cb::-webkit-scrollbar {
    background-color: transparent;
    height: theme("size.2");
  }
}

/* whitespace rendering */
.cb-s,
.cb-t {
  position: relative;
}
:is(.cb-s, .cb-t)::before {
  position: absolute;
  color: transparent;
}
/* hack to fix weird Safari text highlight gaps */
:is(.cb-s, .cb-t)::before {
  left: -100px;
  transform: translateX(100px);
}
.cb-s::before {
  content: "\0000B7"; /* middle dot */
}
.cb-t::before {
  content: "\002192"; /* right arrow */
}
:is(.cb-s, .cb-t).selected::before {
  color: var(--cb-whitespace);
}

/* section expander */
.cb-sh {
  display: block;
  position: sticky;
  left: 0;
  cursor: pointer;
  padding-left: theme("padding.4");
  color: var(--cb-section-expander);
}
.cb-sh:hover,
.cb-sh:has(:focus-visible) {
  color: var(--cb-section-expander-focused);
}
.cb-sh:active {
  color: var(--cb-section-expander-active);
}
.cb-sh input {
  position: absolute;
  appearance: none;
  width: 0;
  height: 0;
}
.cb-sh-h,
.cb-sh-s {
  display: flex;
  align-items: center;
  gap: theme("spacing.2");
  height: theme("lineHeight.7");
}
:is(.cb-sh-h, .cb-sh-s)::before {
  content: "(\0000B7\0000B7\0000B7)"; /* three middle dots in parentheses */
}
:is(.cb-sh:hover, .cb-sh:has(:focus-visible)) .cb-sh-h::before {
  content: "(Show less)";
}
:is(.cb-sh:hover, .cb-sh:has(:focus-visible)) .cb-sh-s::before {
  content: "(Show more)";
}
:is(.cb-sh-h, .cb-sh-s)::after {
  flex-grow: 1;
  border-top: 1px solid currentColor;
  content: "";
}
/* switch the show and hide content depending on expanded status */
.cb-sh-h {
  display: none;
}
.cb-sh:has(:checked) .cb-sh-h {
  display: flex;
}
.cb-sh:has(:checked) .cb-sh-s {
  display: none;
}
/* hide line numbers and indent when neither section context is expanded */
.cb[data-s]:not(:has(.cb-sh :checked)) :is(.cb-ln, .cb-sc-i) {
  display: none;
}
/* hide section context until expanded */
.cb-sx {
  display: none;
}
.cb:has(.cb-sh-b :checked) .cb-sx-b,
.cb:has(.cb-sh-a :checked) .cb-sx-a {
  display: flex;
}

/* api keys */
.cb-k {
  position: relative;
  cursor: pointer;
  margin: -2px -4px;
  border-radius: theme("borderRadius.DEFAULT");
  background-color: var(--cb-key-bg);
  padding: 2px 4px;
  color: var(--cb-key);
}
.cb-k:hover {
  background-color: var(--cb-key-focused-bg);
  color: var(--cb-key-focused);
}
/* api key popup */
.cb-k-p {
  display: none;
  position: absolute;
  top: calc(100% + theme("padding.2"));
  left: 0;
  opacity: 0;
  transition:
    opacity theme("transitionDelay.200"),
    display theme("transitionDelay.200") allow-discrete;
  border-radius: theme("borderRadius.DEFAULT");
  background-color: var(--cb-key-bg);
  padding: theme("padding.3") theme("padding.4");
  color: var(--cb-key);
  font-size: theme("fontSize.base");
  font-family: theme("fontFamily.sans");
  white-space: wrap;
}
.cb-k:hover .cb-k-p {
  display: block;
  opacity: 1;
}
@starting-style {
  .cb-k:hover .cb-k-p {
    opacity: 0;
  }
}
.cb-k-p::before {
  display: block;
  position: absolute;
  inset: 0;
  top: calc(-1 * theme("padding.3"));
  content: "";
}
